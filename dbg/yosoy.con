
// FORMAT:
// comments start with '//'. Ej: this line is a comment because it starts with '//'.
// <dbg_level> <pulse_start> <pulse_end>
// if <pulse_start> is '-1' then it debugs all pulses.
// if <pulse_end> is not specified the it debugs until the last pulse.
// Ej: 
// 28 5 10 
// debugs level 28 from pulse 5 to pulse 10.

// DBG_NUM_LEVS 200

// global

//0 -1 			// 0. start, finish
//1 -1			// 1. mapping (if it has one)
//2 -1			// 2. fix lits (including three lit)
//3 -1			// 3. sectiond read

// finishing

4 -1			// 4. FINAL ASSIG (including cir set_result)
//5 -1			// 5. HIT_RETURN after set_result
//6 -1			// 6. 

// dimacs.cpp

//7 -1			// 7. dimacs. fix_lits
//8 -1			// 8. dimacs. three_lits
//9 -1			// 9. 
//10 -1			// 10. dimacs. parse_header
//11 -1			// 11. dimacs. parse_file
//12 -1			// 12. dimacs. init_lit_mapping
//13 -1			// 13. dimacs. init_ccl_mapping

// brain.h

14 -1			// 14. retract_to_level
//15 -1			// 15. set_charge

// brain.cpp

//16 -1			// 16. update_fibres
//17 -1			// 17. neu_tunnel_signals
//18 -1			// 18. qua_tunnel_signals
//19 -1			// 19. brn_tunnel_signals
//20 -1			// 20. find_middle_reason_of
//21 -1			// 21. find_reasons
//22 -1			// 22. add_reason
//23 -1			// 23. learn_reasons
//24 -1			// 24. pulsate HIT ENTER
//25 -1			// 25. pulsate
//26 -1			// 26. add_neuron
//27 -1			// 27. set_result
//28 -1			// 28. set_result HIT ENTER
//29 -1			// 29. add_neuron_from_lits

// dbg_ic.cpp

//30 -1			// 30. dbg_ic_print
//31 -1			// 31. dbg_ic_print (print brain) and HIT RETURN

// brain.cpp

//32 -1			// 32. solve_it. print brain

// solver.cpp

//33 -1			// 33. command. print_totals. show batch_stat_laps
//34 -1			// 34. command. print_batch_consec. skip it.
//35 -1			// 35. command. print_stats. skip it
//36 -1			// 36. command. print_stats. print mini stats
//37 -1			// 37. command. init_dbg_conf. set dbg_skip_print_info
//38 -1			// 38. command. init_dbg_conf. set dbg_ic_active
//39 -1			// 39. command. init_dbg_conf. set dbg_ic_after
//40 -1			// 40. command. init_dbg_conf. set dbg_ic_gen_jpg

// dimacs.cpp

//41 -1			// 41. dimacs. calc_f_lit_equal_and
//42 -1			// 42. dimacs. calc_f_lit_equal_or
//43 -1			// 43. dimacs. calc_f_lit_equal_or_of_ands

// psignals.cpp

44 -1			// 44. print bad forced qua in add_reason
//45 -1			// 45. 
 
// finish
 
// NEXT=11

